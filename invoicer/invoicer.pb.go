// Definition of our API. Add a service with RPC methods

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: invoicer.proto

package invoicer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Amount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Amount) Reset() {
	*x = Amount{}
	mi := &file_invoicer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{0}
}

func (x *Amount) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Amount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type MultipleAmounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amounts       []*Amount              `protobuf:"bytes,1,rep,name=amounts,proto3" json:"amounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipleAmounts) Reset() {
	*x = MultipleAmounts{}
	mi := &file_invoicer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipleAmounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleAmounts) ProtoMessage() {}

func (x *MultipleAmounts) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleAmounts.ProtoReflect.Descriptor instead.
func (*MultipleAmounts) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{1}
}

func (x *MultipleAmounts) GetAmounts() []*Amount {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type CreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount amount = 1;
	From   string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	VATNum string `protobuf:"bytes,4,opt,name=VATNum,proto3" json:"VATNum,omitempty"`
	// Types that are valid to be assigned to PaymentAmount:
	//
	//	*CreateRequest_SingleAmount
	//	*CreateRequest_MultipleAmounts
	PaymentAmount isCreateRequest_PaymentAmount `protobuf_oneof:"payment_amount"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_invoicer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreateRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreateRequest) GetVATNum() string {
	if x != nil {
		return x.VATNum
	}
	return ""
}

func (x *CreateRequest) GetPaymentAmount() isCreateRequest_PaymentAmount {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

func (x *CreateRequest) GetSingleAmount() *Amount {
	if x != nil {
		if x, ok := x.PaymentAmount.(*CreateRequest_SingleAmount); ok {
			return x.SingleAmount
		}
	}
	return nil
}

func (x *CreateRequest) GetMultipleAmounts() *MultipleAmounts {
	if x != nil {
		if x, ok := x.PaymentAmount.(*CreateRequest_MultipleAmounts); ok {
			return x.MultipleAmounts
		}
	}
	return nil
}

type isCreateRequest_PaymentAmount interface {
	isCreateRequest_PaymentAmount()
}

type CreateRequest_SingleAmount struct {
	SingleAmount *Amount `protobuf:"bytes,5,opt,name=single_amount,json=singleAmount,proto3,oneof"`
}

type CreateRequest_MultipleAmounts struct {
	MultipleAmounts *MultipleAmounts `protobuf:"bytes,6,opt,name=multiple_amounts,json=multipleAmounts,proto3,oneof"`
}

func (*CreateRequest_SingleAmount) isCreateRequest_PaymentAmount() {}

func (*CreateRequest_MultipleAmounts) isCreateRequest_PaymentAmount() {}

type CreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pdf           []byte                 `protobuf:"bytes,1,opt,name=pdf,proto3" json:"pdf,omitempty"`
	Docx          []byte                 `protobuf:"bytes,2,opt,name=docx,proto3" json:"docx,omitempty"`
	Metadata      []byte                 `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_invoicer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{3}
}

func (x *CreateResponse) GetPdf() []byte {
	if x != nil {
		return x.Pdf
	}
	return nil
}

func (x *CreateResponse) GetDocx() []byte {
	if x != nil {
		return x.Docx
	}
	return nil
}

func (x *CreateResponse) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ExchangeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Source         *Amount                `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	TargetCurrency string                 `protobuf:"bytes,2,opt,name=target_currency,json=targetCurrency,proto3" json:"target_currency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExchangeRequest) Reset() {
	*x = ExchangeRequest{}
	mi := &file_invoicer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRequest) ProtoMessage() {}

func (x *ExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRequest) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{4}
}

func (x *ExchangeRequest) GetSource() *Amount {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ExchangeRequest) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

type SumsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumsResponse) Reset() {
	*x = SumsResponse{}
	mi := &file_invoicer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumsResponse) ProtoMessage() {}

func (x *SumsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumsResponse.ProtoReflect.Descriptor instead.
func (*SumsResponse) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{5}
}

func (x *SumsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExchangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeResponse) Reset() {
	*x = ExchangeResponse{}
	mi := &file_invoicer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResponse) ProtoMessage() {}

func (x *ExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResponse.ProtoReflect.Descriptor instead.
func (*ExchangeResponse) Descriptor() ([]byte, []int) {
	return file_invoicer_proto_rawDescGZIP(), []int{6}
}

func (x *ExchangeResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExchangeResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

var File_invoicer_proto protoreflect.FileDescriptor

var file_invoicer_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3c, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x34,
	0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x41,
	0x54, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x41, 0x54, 0x4e,
	0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x48, 0x00,
	0x52, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x42, 0x10, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x52, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x64, 0x66, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x6f, 0x63, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x6f, 0x63,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a,
	0x0f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x24, 0x0a, 0x0c, 0x53, 0x75,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x46, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x9b, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x10, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x0d, 0x2e,
	0x53, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x11,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x72, 0x12, 0x10, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x6d, 0x63, 0x68, 0x72, 0x69,
	0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x63, 0x63, 0x2f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_invoicer_proto_rawDescOnce sync.Once
	file_invoicer_proto_rawDescData []byte
)

func file_invoicer_proto_rawDescGZIP() []byte {
	file_invoicer_proto_rawDescOnce.Do(func() {
		file_invoicer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_invoicer_proto_rawDesc), len(file_invoicer_proto_rawDesc)))
	})
	return file_invoicer_proto_rawDescData
}

var file_invoicer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_invoicer_proto_goTypes = []any{
	(*Amount)(nil),           // 0: Amount
	(*MultipleAmounts)(nil),  // 1: MultipleAmounts
	(*CreateRequest)(nil),    // 2: CreateRequest
	(*CreateResponse)(nil),   // 3: CreateResponse
	(*ExchangeRequest)(nil),  // 4: ExchangeRequest
	(*SumsResponse)(nil),     // 5: SumsResponse
	(*ExchangeResponse)(nil), // 6: ExchangeResponse
}
var file_invoicer_proto_depIdxs = []int32{
	0, // 0: MultipleAmounts.amounts:type_name -> Amount
	0, // 1: CreateRequest.single_amount:type_name -> Amount
	1, // 2: CreateRequest.multiple_amounts:type_name -> MultipleAmounts
	0, // 3: ExchangeRequest.source:type_name -> Amount
	2, // 4: Invoicer.Create:input_type -> CreateRequest
	1, // 5: Invoicer.SumNums:input_type -> MultipleAmounts
	4, // 6: Invoicer.ExchangeConverter:input_type -> ExchangeRequest
	3, // 7: Invoicer.Create:output_type -> CreateResponse
	5, // 8: Invoicer.SumNums:output_type -> SumsResponse
	6, // 9: Invoicer.ExchangeConverter:output_type -> ExchangeResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_invoicer_proto_init() }
func file_invoicer_proto_init() {
	if File_invoicer_proto != nil {
		return
	}
	file_invoicer_proto_msgTypes[2].OneofWrappers = []any{
		(*CreateRequest_SingleAmount)(nil),
		(*CreateRequest_MultipleAmounts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_invoicer_proto_rawDesc), len(file_invoicer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_invoicer_proto_goTypes,
		DependencyIndexes: file_invoicer_proto_depIdxs,
		MessageInfos:      file_invoicer_proto_msgTypes,
	}.Build()
	File_invoicer_proto = out.File
	file_invoicer_proto_goTypes = nil
	file_invoicer_proto_depIdxs = nil
}
